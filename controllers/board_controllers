const Board = require("../schemas/Board");

// Get all scores
const getAllScores = async (req, res) => {
  try {
    const scores = await Board.find();
    res.status(200).json(scores);
  } catch (error) {
    res.status(500).json({ message: "Error retrieving scores", error });
  }
};

// Get score by username
const getScoreBoardByUsername = async (req, res) => {
  try {
    const { username } = req.params;
    const user = await Board.findOne({ username });
    if (user) {
      res.status(200).json(user); // No need to wrap user in another object
    } else {
      res.status(404).json({ message: "No user found" });
    }
  } catch (error) {
    res.status(500).json({ message: "Error retrieving user score", error });
  }
};

// Edit score or create new if not exists
const createOrUpdateScore = async (req, res) => {
  try {
    const { username } = req.params; // Get username from URL params
    const { total_battles, battles_won, battles_lost } = req.body;

    // Check for missing fields
    if (
      total_battles === undefined ||
      battles_won === undefined ||
      battles_lost === undefined
    ) {
      return res.status(400).json({ message: "All fields are required" });
    }

    // Find the existing user
    const existingUser = await Board.findOne({ username });

    if (existingUser) {
      // Update the user's scores
      const updatedUser = await Board.findOneAndUpdate(
        { username },
        {
          $set: {
            total_battles: existingUser.total_battles + total_battles,
            battles_won: existingUser.battles_won + battles_won,
            battles_lost: existingUser.battles_lost + battles_lost,
          },
        },
        { new: true } // Return the updated document
      );

      // Respond with the updated user
      return res.status(200).json(updatedUser);
    } else {
      // Create a new score if user does not exist
      const newScore = await Board.create({
        username,
        total_battles,
        battles_won,
        battles_lost,
      });
      return res.status(201).json(newScore);
    }
  } catch (error) {
    res
      .status(500)
      .json({ message: "Error creating or updating score", error });
  }
};

const createNewScore = async (req, res) => {
  try {
    const { username, total_battles, battles_won, battles_lost } = req.body;

    if (
      !username ||
      total_battles === undefined ||
      battles_won === undefined ||
      battles_lost === undefined
    ) {
      return res.status(400).json({ message: "All fields are required" });
    }

    const newScore = await Board.create({
      username,
      total_battles,
      battles_won,
      battles_lost,
    });

    res.status(201).json(newScore);
  } catch (error) {
    res.status(500).json({ message: "Error creating new score", error });
  }
};

module.exports = {
  getAllScores,
  createOrUpdateScore,
  getScoreBoardByUsername,
  createNewScore,
};
